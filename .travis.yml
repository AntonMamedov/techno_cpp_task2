dist:     trusty    # используем Ubuntu 14.04 Trusty Tahr (а не 12.02 Precise Pangolin)
sudo:     required  # используем Virtual Machine (а не Docker container)

language: c
os:
    - linux
    - osx

compiler:
    - gcc
    - clang

addons:
    apt:
        packages:
            - valgrind
            - cppcheck
            - make
            - cmake
            - lcov


env:
    # список переменных окружения, влияющих на матрицу сборки:
    - TARGET_CPU=amd64 BUILD_CONFIGURATION=Debug
    - TARGET_CPU=amd64 BUILD_CONFIGURATION=Release
    - TARGET_CPU=x86 BUILD_CONFIGURATION=Debug
    - TARGET_CPU=x86 BUILD_CONFIGURATION=Release


matrix:
    exclude:
        # вручную исключим ненужные элементы из матрицы сборки:
        - os:       osx
          compiler: gcc

        - os:  osx
          env: TARGET_CPU=x86 BUILD_CONFIGURATION=Debug

        - os:  osx
          env: TARGET_CPU=x86 BUILD_CONFIGURATION=Release


script:
    # скрипт сборки и тестирования проекта:
    - chmod u+x builder.sh
    - chmod u+x gtest_runer.sh
    - ./builder.sh
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "${CC_FOR_BUILD}" =~ gcc$ ]]; then ./gtest_runer.sh; fi
    - cd filemetrics/build
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "${CC_FOR_BUILD}" =~ gcc$ ]]; then lcov --capture --directory . --output-file coverage.info; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "${CC_FOR_BUILD}" =~ gcc$ ]]; then bash <(curl -s https://codecov.io/bash); fi
    - cd ../..
    - cd filemetrics_multithreaded/build
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "${CC_FOR_BUILD}" =~ gcc$ ]]; then lcov --capture --directory . --output-file coverage.info; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "${CC_FOR_BUILD}" =~ gcc$ ]]; then bash <(curl -s https://codecov.io/bash); fi
    - cd ../..
    - cd filemetrics/src
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cppcheck --enable=warning,performance,information src/*.c; fi
    - cd ..
    - cd filemetrics_multithreaded/src
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then cppcheck --enable=warning,performance,information src/*.c; fi